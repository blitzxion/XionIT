@using XionIT.Models;
@model NewPersonViewModel
@{
	ViewBag.Title = "New Person";
}

<div class="row">

	<p>Create a new person so they can have assets be assigned to them.</p>
</div>

@using (Html.BeginForm(@"create", "people", FormMethod.Post, new { @class = "form-horizontal" }))
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary("", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(x => x.Email, new { @class = "col-lg-2 control-label" })
		<div class="col-lg-10">
			@Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
		</div>
	</div>

	<div class="form-group">
		<label class="col-md-2 control-label">
			User Role
		</label>
		<div class="col-md-10">
			@Html.DropDownList(@"Roles", ((SelectList)ViewBag.RoleId).Reverse(), null, new { @class = "form-control" })
		</div>
	</div>

	<div class="passwordContainer">
		<div class="form-group">
			@Html.LabelFor(x => x.Password, new { @class = "col-lg-2 control-label" })
			<div class="col-lg-10">
				@Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control" } })
				<p class="help-block">Only Admins require a password! Passwords for normal users will be ignored.</p>
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(x => x.ConfirmPassword, new { @class = "col-lg-2 control-label" })
			<div class="col-lg-10">
				@Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
			</div>
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" class="btn btn-default" value="Create" />
		</div>
	</div>

}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script>
		(function () {

			$('#Roles').on('change', function () {
				var isDisabled = $(this).val() != "Admin";
				$('.passwordContainer :input').each(function (index, e) {
					$(e).prop('disabled', isDisabled);
				});
				$('.passwordContainer').toggleClass('hide', isDisabled);
			});
			$('#Roles').change();

		})();
	</script>

}